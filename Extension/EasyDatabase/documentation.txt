Call syntax:
	_result = [] call compile ("EasyDatabase" callExtension str ["FUNCTIONNAME", [<PARAMETER>]]);
Returned informations:
	[<SUCCESS:BOOL>, <ERROR:STRING>, <RETURNVALUE:UNKNOWN>]
Functions:
	VERSION
		Returns current version of the DLL.
		@Return		STRING		Current Version of EasyDatabase
		@Example	["VERSION", []]
	ABOUT
		Returns informations about the DLL.
		@Return		STRING		Some information text
		@Example	["ABOUT", []]
	GETPREPAREDSTATEMENT
		Searches for the PreparedStatement and returns its UniqueID.
		@Param1		STRING		Name of PreparedStatement (Case Sensitive!)
		@Return		SCALAR		UniqueID of given PreparedStatement
		@CanFail	Function will fail when given PreparedStatement is not existing
		@Example	["GETPREPAREDSTATEMENT", ["FooBar"]]
	GETCONNECTION
		Searches for the Connection and returns its UniqueID.
		@Param1		STRING		Name of Connection (Case Sensitive!)
		@Return		SCALAR		UniqueID of given Connection
		@CanFail	Function will fail when given Connection is not existing
		@Example	["GETCONNECTION", ["FooBar"]]
	OPENCONNECTION
		Opens given connection and starts the connection tracker (if Param2 is > 0)
		@Param1		SCALAR		UniqueID of Connection
		@Param2		SCALAR		Timeout for this connection or 0 if no timeout is wanted
		@Return		NIL
		@CanFail	Function will fail when given Connection is not existing or an error occurs while opening the connection
		@Example	["OPENCONNECTION", [1, 0]]
	CLOSECONNECTION
		Closes given connection
		@Param1		SCALAR		UniqueID of Connection
		@Return		NIL
		@CanFail	Function will fail when given Connection is not existing or an error occurs when the connection gets closed
		@Example	["CLOSECONNECTION", [1]]
